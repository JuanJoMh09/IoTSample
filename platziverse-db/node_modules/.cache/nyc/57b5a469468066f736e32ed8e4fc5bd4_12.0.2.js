'use strict';var cov_1loie3850z=function(){var path="/home/juanjo/MEGAsync/platziverse/platziverse-db/tests/fixtures/agent.js",hash="036a7035f54129b257a050e4955aab17a36767e7",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/juanjo/MEGAsync/platziverse/platziverse-db/tests/fixtures/agent.js",statementMap:{"0":{start:{line:3,column:14},end:{line:13,column:1}},"1":{start:{line:15,column:15},end:{line:20,column:1}},"2":{start:{line:23,column:18},end:{line:23,column:40}},"3":{start:{line:24,column:4},end:{line:24,column:39}},"4":{start:{line:27,column:0},end:{line:34,column:1}},"5":{start:{line:30,column:34},end:{line:30,column:45}},"6":{start:{line:31,column:30},end:{line:31,column:53}},"7":{start:{line:32,column:18},end:{line:32,column:58}},"8":{start:{line:32,column:37},end:{line:32,column:49}},"9":{start:{line:33,column:16},end:{line:33,column:54}},"10":{start:{line:33,column:34},end:{line:33,column:45}}},fnMap:{"0":{name:"extend",decl:{start:{line:22,column:9},end:{line:22,column:15}},loc:{start:{line:22,column:28},end:{line:25,column:1}},line:22},"1":{name:"(anonymous_1)",decl:{start:{line:30,column:29},end:{line:30,column:30}},loc:{start:{line:30,column:34},end:{line:30,column:45}},line:30},"2":{name:"(anonymous_2)",decl:{start:{line:31,column:26},end:{line:31,column:27}},loc:{start:{line:31,column:30},end:{line:31,column:53}},line:31},"3":{name:"(anonymous_3)",decl:{start:{line:32,column:12},end:{line:32,column:13}},loc:{start:{line:32,column:18},end:{line:32,column:58}},line:32},"4":{name:"(anonymous_4)",decl:{start:{line:32,column:32},end:{line:32,column:33}},loc:{start:{line:32,column:37},end:{line:32,column:49}},line:32},"5":{name:"(anonymous_5)",decl:{start:{line:33,column:10},end:{line:33,column:11}},loc:{start:{line:33,column:16},end:{line:33,column:54}},line:33},"6":{name:"(anonymous_6)",decl:{start:{line:33,column:30},end:{line:33,column:31}},loc:{start:{line:33,column:34},end:{line:33,column:45}},line:33}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},b:{},_coverageSchema:"d34fc3e6b8297bcde183f5492bcb8fcb36775295"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const agent=(cov_1loie3850z.s[0]++,{id:1,uuid:'yyy-yyy-yyy',name:'fixture',username:'platzi',hostname:'test-host',pid:0,connected:true,createdAt:new Date(),updatedAt:new Date()});const agents=(cov_1loie3850z.s[1]++,[agent,extend(agent,{id:2,uuid:'yyy-yyy-yyw',connected:false,username:'test'}),extend(agent,{id:3,uuid:'yyy-yyy-yyx'}),extend(agent,{id:4,uuid:'yyy-yyy-yyz',username:'test'})]);function extend(obj,values){cov_1loie3850z.f[0]++;//funcion para clonar el objeto original con datos diferentes
const clone=(cov_1loie3850z.s[2]++,Object.assign({},obj));cov_1loie3850z.s[3]++;return Object.assign(clone,values);}cov_1loie3850z.s[4]++;module.exports={single:agent,all:agents,connected:agents.filter(a=>{cov_1loie3850z.f[1]++;cov_1loie3850z.s[5]++;return a.connected;}),//filtro para ver usuarios conectados
platzi:agents.filter(a=>{cov_1loie3850z.f[2]++;cov_1loie3850z.s[6]++;return a.username==='platzi';}),//filtro user = platzi
byUuid:id=>{cov_1loie3850z.f[3]++;cov_1loie3850z.s[7]++;return agents.filter(a=>{cov_1loie3850z.f[4]++;cov_1loie3850z.s[8]++;return a.uuid===id;}).shift();},//filtro por uuid. Shift funciona para devolver el primer elemento encontrado, si no devolveria un array
byId:id=>{cov_1loie3850z.f[5]++;cov_1loie3850z.s[9]++;return agents.filter(a=>{cov_1loie3850z.f[6]++;cov_1loie3850z.s[10]++;return a.id===id;}).shift();}/**
 * comandos para utilizar las pruebas
 * 1. node
 * 2. var agentFixture = require('./tests/fixtures/agent)
 * 3. agentFixture.single or .all or byId...
 */};